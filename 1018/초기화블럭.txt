1.초기화 블럭(initialization block)
  인스턴스 초기화 블럭 ==> 인스턴스가 확보된후 생성자가 동작하기 이전에 작동하여
     다양한 생성자에서 수행할 공통기능을 미리 수행하는 코드.
     객체를 생성할 때마다 동작한다.
     
  static 초기화 블럭 ==> 클래스 변수가 메모리에 확보된 직후에 단 한번만 동작하여
     클래스 변수를 초기화하는 동작을 수행하는 코드   
  
   1) 제일먼저 Some클래스의 클래스 변수 c가 확보된다.
   2) static 초기화 블럭이 동작한다.
   3) Some s1 = new Some();
      인스턴스 변수가 확보되고 초기화 블럭이 동작한다. 이후 인자가 없는 생성자가 동작한다.
   4) Some s2 = new Some(10,20);
      인스턴스 변수가 확보되고 초기화 블럭이 동작한다. 이후에 인자가 2개인 생성자가 동작한다.
   
   class Some{
      int a;
      int b;
      static int c;
      
      static {
         //static 초기화 블럭
         위의 클래스변수 c가 확보된 직후에 호출된다.
      }
      
      {
         //초기화 블럭
      	객체의 생성자가 작동하기 이전에 수행된다.
      	this 사용이 가능하다.
      	모든 멤버에 접근 가능
      }
      
      Some(){
       ...
      }   
      
      Some(int a){
        ...
      }
      
      Some(int a, int b){
        ...
      }  
   }
   
멤버변수가 초기화 되는 순서   
 
 		//1. static 변수가 확보되고 0을 가진다.
		//2. static변수의 명시적 초기값이 저장된다.
		//3. static초기화블럭에 의해 값이 저장된다.
		//--------------------------------
		//4. new InitTest()에 의해 동적영역에 인스턴스변수가 확보되고 0을 가진다.
		//5. 인스턴스 변수의 명시적 초기값이 저장된다.
		//6. 초기화 블럭에서의 값이 저장된다.
		//7. 생성자에서 지정한 값이 인스턴스 변수에 저장된다.