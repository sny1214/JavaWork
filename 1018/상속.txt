상속(inheritance) : 프로그램 언어에서의 상속은 클래스를 만들때
       기존에 존재하는 클래스의 멤버를 새로 만드는 클래스에서 
       자유롭게 접근하여 사용할 수 있는 기능을 의미한다.
       새로운 클래스에는 추가적인 멤버변수와 메서드만 만들면 된다.
       
       기존에 존재하는 클래스는 source는 없고 컴파일된 class화일만 존재한다고 
       가정하고 모든 문법을 이해해야 한다.
       
일례로 성명과 세점수를 가지고 총점, 평균을 관리하는 Score 클래스가 있다.
이를 잘 사용하고 있었다.
그런데 이제 추가적으로 학점을 구하는 기능도 필요하다면 ?
1) 기존 소스에 학점 관련 멤버변수와 메서드를 추가하는 방법
   ==> Score.java 소스가 있다면 가능하지만( 이또한 많은 문제를 내포하고 있다) 
       소스가 없다면 어떻게 할것인가?
2) 새로운 클래스를 만들되 기존의 기능은 Score를 상속받아 사용한다.
   기존 기능을 재사용하고 새로운 기능만 추가 한다(상속)

================================================
상속 문법
   class Score{
     ...  <----------------------|
   }                             | 
                                 |
   //    하위클래스       상위클래스  |
   class Score2 extends Score{   |
     //추가된 멤버변수. <---|        | 
     //생성자()           |        | 상위클래스의 모든 멤버 즉, 멤버변수와 
     //추가된 메서드(){    | ok     | 메서드를 자유롭게 사용할수 있다(단 접근제어가 허용하는 범주에서)
               ---------|        |
               ------------------|
       }
   }  
   
   기존클래스                  새로만든 클래스
   ======================================
   상위 클래스(Super)          하위 클래스(Sub)
   부모 클래스(Parent)         자식 클래스(Child)
   기반 클래스(Base)           파생된 클래스(Derived)
   
 1) 하위클래스의 생성자는 용도에 맞게 새로 만들어야 한다.
 2) 하위클래스의 메서드나 생성자 내부에서는 상위클래스의 멤버변수와 메서드를
    접근제어자가 허용하는 한 자유롭게 사용할 수 있다
    (주의:동일패키지 상위클래스의 private멤버는 접근할 수 없다 ==> 상속되지 않는다,
         다른패키지에서는 상위클래스의 default멤버도 접근할수 없다.)
 3) 하위클래스로 객체 생성시 상위클래스의 인스턴스도 함께 확보된다.
 4) 하위클래스객체.멤버 사용시 상위클래스의 멤버도 사용가능한다(물론 여기서도 접근제어자가 허용하는 범위내에서)
 참고) Java언어에서는 다중상속이 안된다. 즉, 부모클래스가 1개이다  
     //다중상속(Java언어에서는 error)
	 class A extends B,C{
	 }    