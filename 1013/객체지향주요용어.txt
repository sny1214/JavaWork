객체지향 프로그램(Object Oriented Program)
 객체를 정의하고 객체의 상호작용으로 문제를 해결하는 프로그램 작성 기법
 
객체지향 프로그램에서의 중요한 개념(용어)

분석/설계
  객체(object) - 현실세계의 문제영역에 존재하는 유.무형의 모든 실체
      유형의 객체 :  형광등1, 모니터1, 컴퓨터본체1, 모니터2, 칠판, 주현식, 장협진, 안진우, ...
      무형의 객체 :  2021년 10월 11일, 1985년 4월 7일, 
  
  클래스(class) - 현실세계의 수많은 객체들을 목적에 부합하는 상태적특성과 행위적 특성의 동일한것을
                분류해 놓은것
       상태적 특성 - 값으로 표현되어 지는것 
       행위적 특성 - 값을 사용하여 수행할수 있는 기능
       
               현실세계의 Tv들은 아래의 특성외에도 수많은 특성이 있지만 
               클래스를 만든 목적에 필요한 특성만 추출한다.(불필요한 요소 제거)
                          |
                          |  
                          | 추상화
                          |
                          v
                 클래스명   Tv
                ========================
                         색상             멤버변수(Java언어에서는 filed) ****
                상태적특성  파워 상태         특성(attribute),속성(property)
                         채널             상태(state)  
                ------------------------         
                         켜다()           기능 
                행위적특성 끄다()            함수(function)
                         채널을 변경하다()   메서드(method) ****
                         파워를 켜다/끄다()  행위(behavior)
                ------------------------------         
                
        추상화의 산물로 만들어진 클래스는 캡슐화 되어 있다고 한다.
        캡슐화는 1) 관련있는 요소를 하나의 단위로 모아놓았다(묶어놓았다)    
                  멤버변수 + 메서드들
                  
               2) 내부 요소들은 자유롭게 접근할수 있다.
                  ★중요★)메서드 내부에서 멤버변수를 자유롭게 사용할 수 있다.
                  
               3) 내부 요소들은 외부로 공개되어 있어는 요소(public)와
                  내부에 숨겨진 요소(private)로 구분한다. 이러한 특성을 이용하여
                  데이타를 보여하는 기능을 가진다.  즉, 공개된 요소만을 사용할 수 있다.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                      
구현(프로그래밍 언어)
  클래스(class) : 1) 클래스는 객체의 구조 정의(구조가 어떻게 생겼는지 규정)해 놓은것이다.
                   클래스 = 멤버변수 + 메서드
                2) 클래스는 객체를 생성하는 틀(template) 즉, 설계도에 해당한다. 
                
  객체(object) : 1) 클래스를 인스턴스화 시킨것( 틀을 이용하여 만들어진 실체 )
                   설계도 대로 만들어진 제품   
                2) 동일한 클래스를 이용하여 여러 인스턴스를 생성할 수 있다.
                   단, 내용물은 다르게 만들수 있다.
                3) 모든 객체는 다른 객체와 구분되는 식별성을 가지고 있다.
                
                클래스 
                  |
              new | 인스턴스화
                  |
                  v
        객체 ===>인스턴스1, 인스턴스2, ....   
                                          
             
    프로그램코드에서의 객체생성후 객체의 멤버를 접근하는 모든것을 메세지를 전달한다고 한다.
        0) 클래스 만들기
           class Some{
              멤버변수;--|
              ...      | <-------------------|
              ...    --|                     |
              메서드(){                        |
                다른멤버를 자유롭게 접근할 수 있다.--|
                ...
              }
              ...
           }
                                                  
        1) 객체생성
        Some obj = new Some();
        
        2) 객체 사용 ( 멤버에 접근하는것 )
           obj.멤버변수
           obj.메서드()
        
                                                     