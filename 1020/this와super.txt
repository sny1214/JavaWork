단일 클래스에서의 this

1. this는 객체 자체를 나타내는 참조값이다.
2. 생성자 및 인스턴스 메서드 내부에서만 사용할 수 있다.
   다른 곳 즉, 클래스 메서드에서는 사용할 수 없다.

class A{
  int a, b;  //멤버변수
  
  A(){
    a = 10; //this.a = 10;
    b = 20; //this.b = 20;
  }
  
  A(int a, int b){
    //메서드나 생성자 내부에서 식별자(변수명)를 사용하면
    //1) 지역변수, 혹은 매개변수인지 판별
    a = a * 5;      //a는 매개변수를 의미
    this.a = a * 5;
    ------   - 
    멤버변수   매개변수,지역변수
  }
  
  void method(){
  }
}

2. 단일 클래스의 생성자 내부에서 this()
   - 다른 생성자를 호출하는 기능을 수행한다.
   - 인자표현에 따라 다른 생성자를 호출할 수 있다.
   - 반드시 생성자 내부에서 첫 실행 문장이어야 한다.
-----------------------------------------------
3. 상속관계의 하위클래스에서 this와 super
   1) this는 하위클래스 객체 참조값을 의미한다.
   2) this.멤버 표현은 하위클래스의 멤버를 명시적으로 지정하지만 없다면
                    상위클래스의 멤버를 차례로 검색해서 적용한다.
   3) super는 하위클래스에서 상위클래스 멤버를 명시적으로 지정할때 사용한다.                 
 
4. this()와 super()
   1) this()는 현재클래스의 다른 생성자를 호출
   2) super()는 하위클래스의 생성자에서 상위클래스의 생성자를 명시적으로 지정하여 호출
                   
  
 상속에서 생성자의 작동 순서
 1) 상위클래스와 하위클래스의 인스턴스가 메모리에 할당 된 후
 2) 하위클래스의 생성자를 호출하지만 하위클래스 생성자의 첫 실행문에서 상위클래스의 생성자를
    (자동으로) 호출하도록 규정하고 있다. 아무런 호출 문장이 없으면 자동으로 super()가 적용되어
    인자가 없는 상위클래스의 생성자를 호출한다.
    
    ==> Java언어에서 super(), this() 생성자 내부에 코딩되어 있지만 
        실제로는 생성자가 작동하기 전에 동작하는 코드로 이해하는 것이 좋다.            
    